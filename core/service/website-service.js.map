{"version":3,"sources":["core/service/website-service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAA2B,eAAe,CAAC,CAAA;AAC3C,qBAAsC,MAAM,CAAC,CAAA;AAElC,qBAAa,GAAW;IAC/B,IAAI,EAAE,QAAQ;CACjB,CAAC;AAIF;IAII;QAHA,aAAQ,GAAQ,eAAQ,CAAC;QACzB,eAAU,GAAG,eAAQ,CAAC,OAAO,EAAE,CAAC,GAAG,EAAE,CAAC;QAC/B,gBAAW,GAAgB,IAAI,kBAAW,EAAE,CAAC;IACpC,CAAC;IAEjB,gCAAO,GAAP,UAAQ,IAAY,EAAE,IAAU;QAC5B,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACnC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;YAAC,QAAQ,CAAC,KAAK,GAAG,EAAE,CAAC;QAAC,CAAC;QAC7C,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC9B,CAAC;IAED;;;MAGE;IACF,iCAAQ,GAAR,UAAS,IAAY;QACjB,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QACvD,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC;QAC7E,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK;aACrC,IAAI,CAAC,UAAA,IAAI,IAAM,MAAM,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACrD,CAAC;IAGD;;;;;OAKG;IACH,+BAAM,GAAN,UAAO,IAAU;QACb,IAAI,QAAQ,GAAG,EAAE,aAAa,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC;QAC5C,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,UAAC,QAAQ;YAClF,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;YACvD,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAC/B,IAAI,GAAG,GAAG,QAAQ,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAC5C,OAAO,CAAC,GAAG,CAAC,mBAAmB,EAAE,GAAG,CAAC,CAAC;YACtC,MAAM,CAAC,GAAG,CAAC;QACf,CAAC,CAAC,CAAC;IACP,CAAC;IAED,qCAAY,GAAZ;QACI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,GAAG,EAAE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC;IAC9E,CAAC;IAED,sBAAI,iCAAK;aAAT;YACI,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;QAC/C,CAAC;;;OAAA;IAhDL;QAAC,iBAAU,EAAE;;sBAAA;IAkDb,qBAAC;AAAD,CAjDA,AAiDC,IAAA;AAjDY,sBAAc,iBAiD1B,CAAA","file":"core/service/website-service.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { firebase, UserService } from 'core';\r\n\r\nexport var defaultNavbar: Navbar = {\r\n    type: 'navbar'\r\n};\r\n\r\n\r\n@Injectable()\r\nexport class WebsiteService {\r\n    firebase: any = firebase;\r\n    storageRef = firebase.storage().ref();\r\n    public userService: UserService = new UserService();\r\n    constructor() { }\r\n\r\n    addPart(path: string, part: Part) {\r\n        var editPage = this.findPage(path);\r\n        if (!editPage.parts) { editPage.parts = []; }\r\n        editPage.parts.push(part);\r\n    }\r\n\r\n    /**\r\n    *根据页面path来查找数据\r\n    *service\r\n    */\r\n    findPage(path: string): Page {\r\n        path = path.startsWith('/') ? path.substring(1) : path;\r\n        path = path.indexOf(';') != -1 ? path.substring(0, path.indexOf(';')) : path;\r\n        return this.userService.user.website.pages\r\n            .find(page => { return page.path == path; });\r\n    }\r\n\r\n\r\n    /**\r\n     * 上传图片接口\r\n     * 使用方法\r\n     * var file = document.getElementById('selectFileInput').files[0];\r\n     * WebsiteService.upload(file);\r\n     */\r\n    upload(file: File): Promise<string> {\r\n        var metadata = { 'contentType': file.type };\r\n        return this.storageRef.child('images/' + file.name).put(file, metadata).then((snapshot) => {\r\n            console.log('Uploaded', snapshot.totalBytes, 'bytes.');\r\n            console.log(snapshot.metadata);\r\n            var url = snapshot.metadata.downloadURLs[0];\r\n            console.log('File available at', url);\r\n            return url;\r\n        });\r\n    }\r\n\r\n    clearWebsite() {\r\n        this.userService.user.website = { pages: [{ path: 'index', parts: [] }] };\r\n    }\r\n\r\n    get pages(): Page[] {\r\n        return this.userService.user.website.pages;\r\n    }\r\n\r\n}\r\n\r\n"],"sourceRoot":"/source/"}