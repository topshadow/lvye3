{"version":3,"sources":["core/directive/auto-open-panel.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAqE,eAAe,CAAC,CAAA;AAGrF;;GAEG;AAIH;IAAA;QAEyB,cAAS,GAAG,IAAI,mBAAY,EAAE,CAAC;IASxD,CAAC;IAPG,uCAAe,GAAf,UAAgB,KAAiB;QAC7B,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,CAAC;QACD,KAAK,CAAC,cAAc,EAAE,CAAC;IAC3B,CAAC;IARD;QAAC,YAAK,CAAC,iBAAiB,CAAC;;gDAAA;IACzB;QAAC,aAAM,CAAC,WAAW,CAAC;;oDAAA;IACpB;QAAC,mBAAY,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,CAAC;;;;wDAAA;IAN1C;QAAC,gBAAS,CAAC;YACP,QAAQ,EAAE,mBAAmB;SAChC,CAAC;;qBAAA;IAYF,oBAAC;AAAD,CAXA,AAWC,IAAA;AAXY,qBAAa,gBAWzB,CAAA","file":"core/directive/auto-open-panel.js","sourcesContent":["import { Directive, HostListener, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n\r\n/**\r\n * 自动打开操作面板\r\n */\r\n@Directive({\r\n    selector: '[auto-open-panel]'\r\n})\r\nexport class AutoOpenPanel {\r\n    @Input('auto-open-panel') panel: { editPanel: any, selectedIndex: number, data: any };\r\n    @Output('openPanel') openPanel = new EventEmitter();\r\n    @HostListener('mousedown', ['$event'])\r\n    openSettingMenu(event: MouseEvent) {\r\n        if (event.button == 2) {\r\n            this.openPanel.emit(this.panel);\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n}\r\n"],"sourceRoot":"/source/"}