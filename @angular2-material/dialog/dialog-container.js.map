{"version":3,"sources":["dialog/dialog-container.ts"],"names":[],"mappings":";;;;;;;;;;;;;;OAAO,EAAC,SAAS,EAAgB,SAAS,EAAE,iBAAiB,EAAC,MAAM,eAAe;OAC5E,EACL,cAAc,EAEd,mBAAmB,EAEpB,MAAM,yBAAyB;OAEzB,EAAC,mCAAmC,EAAC,MAAM,iBAAiB;AAGnE;;GAEG;AAYH;IAAuC,qCAAc;IAArD;QAAuC,8BAAc;IAmBrD,CAAC;IAZC,2DAA2D;IAC3D,iDAAqB,GAArB,UAAyB,MAA0B;QACjD,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;YACnC,MAAM,IAAI,mCAAmC,EAAE,CAAC;QAClD,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;IACxD,CAAC;IAED,gDAAoB,GAApB,UAAqB,MAAsB;QACzC,MAAM,KAAK,CAAC,qBAAqB,CAAC,CAAC;IACrC,CAAC;IAhBD;QAAC,SAAS,CAAC,mBAAmB,CAAC;;0DAAA;IAbjC;QAAC,SAAS,CAAC;YACT,QAAQ,EAAE,MAAM,CAAC,EAAE;YACnB,QAAQ,EAAE,qBAAqB;YAC/B,WAAW,EAAE,uBAAuB;YACpC,SAAS,EAAE,CAAC,sBAAsB,CAAC;YACnC,IAAI,EAAE;gBACJ,OAAO,EAAE,qBAAqB;gBAC9B,aAAa,EAAE,oBAAoB;aACpC;YACD,aAAa,EAAE,iBAAiB,CAAC,IAAI;SACtC,CAAC;;yBAAA;IAoBF,wBAAC;AAAD,CAnBA,AAmBC,CAnBsC,cAAc,GAmBpD","file":"dialog/dialog-container.js","sourcesContent":["import {Component, ComponentRef, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {\n  BasePortalHost,\n  ComponentPortal,\n  PortalHostDirective,\n  TemplatePortal\n} from '@angular2-material/core';\nimport {MdDialogConfig} from './dialog-config';\nimport {MdDialogContentAlreadyAttachedError} from './dialog-errors';\n\n\n/**\n * Internal component that wraps user-provided dialog content.\n */\n@Component({\n  moduleId: module.id,\n  selector: 'md-dialog-container',\n  templateUrl: 'dialog-container.html',\n  styleUrls: ['dialog-container.css'],\n  host: {\n    'class': 'md-dialog-container',\n    '[attr.role]': 'dialogConfig?.role'\n  },\n  encapsulation: ViewEncapsulation.None,\n})\nexport class MdDialogContainer extends BasePortalHost {\n  /** The portal host inside of this container into which the dialog content will be loaded. */\n  @ViewChild(PortalHostDirective) _portalHost: PortalHostDirective;\n\n  /** The dialog configuration. */\n  dialogConfig: MdDialogConfig;\n\n  /** Attach a portal as content to this dialog container. */\n  attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n    if (this._portalHost.hasAttached()) {\n      throw new MdDialogContentAlreadyAttachedError();\n    }\n\n    return this._portalHost.attachComponentPortal(portal);\n  }\n\n  attachTemplatePortal(portal: TemplatePortal): Map<string, any> {\n    throw Error('Not yet implemented');\n  }\n}\n"],"sourceRoot":"/source/"}