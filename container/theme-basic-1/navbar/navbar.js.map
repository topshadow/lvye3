{"version":3,"sources":["container/theme-basic-1/navbar/navbar.ts"],"names":[],"mappings":"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","file":"container/theme-basic-1/navbar/navbar.js","sourcesContent":["import { Component, OnInit, ElementRef, Input, HostListener } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { WebsiteService } from 'core';\r\n\r\n/**\r\n * 下拉选框选择页面\r\n */\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: 'theme-basic1-navbar',\r\n    templateUrl: './navbar.html'\r\n})\r\nexport class Navbar implements OnInit {\r\n    public newPage: any = { pageName: '', path: '' };\r\n    @Input() data;\r\n    pages: Page[];\r\n    constructor(public el: ElementRef, private websiteService: WebsiteService,\r\n        private router: Router) { }\r\n\r\n    // 移动端按住就会显示\r\n    @HostListener('touchstart', ['$event'])\r\n    showPanelOnMobile() {\r\n        window['$'](this.el.nativeElement).find('.modal').modal('toggle');\r\n    }\r\n\r\n    // 桌面端\r\n    @HostListener('dblclick', ['$event'])\r\n    showPanelOnDesktop() {\r\n        window['$'](this.el.nativeElement).find('.modal').modal('toggle');\r\n    }\r\n\r\n\r\n    ngOnInit() {\r\n        this.pages = this.websiteService.userService.user.website.pages;\r\n        var Hammer = window['Hammer'];\r\n        var elHammer = new Hammer(this.el.nativeElement, {\r\n            recognizers: [\r\n                // RecognizerClass, [options], [recognizeWith, ...], [requireFailure, ...]\r\n                [Hammer.Tap],\r\n                [Hammer.Rotate],\r\n                [Hammer.Pinch, { enable: false }, ['rotate']],\r\n                [Hammer.Swipe, { direction: Hammer.DIRECTION_HORIZONTAL }],\r\n            ]\r\n        });\r\n        elHammer.on('tap', (ev) => {\r\n            console.log(ev);\r\n            // if(ev.add)\r\n        });\r\n    }\r\n\r\n\r\n\r\n    addPage(page: { parts: Part[], path: string, pageName: string }) {\r\n        this.websiteService.userService.user.website.pages\r\n            .push(page);\r\n    }\r\n\r\n    navigate(path) {\r\n        this.router.navigate([path]);\r\n    }\r\n\r\n    deleteMe() {\r\n        var page = this.websiteService.findPage(this.router.url);\r\n        console.log(this.router.url, page);\r\n        var index = page.parts.indexOf(this.data);\r\n        page.parts.splice(index, 1);\r\n    }\r\n}\r\n"],"sourceRoot":"/source/"}